const Components = require('../../components.json');
const fs = require('fs');
const render = require('json-templater/string');
const upperCamelcase = require('uppercamelcase');
const path = require('path');
const endOfLine = require('os').EOL;

const OUTPUT_PATH = path.join(process.cwd(), 'src/index.js');
const IMPORT_TEMPLATE = 'import {{name}} from \'./components/{{package}}/index.js\';';
const INSTALL_COMPONENT_TEMPLATE = '  {{name}}';
let MAIN_TEMPLATE = `/* Automatically generated by './build/bin/build-entry.js' */

{{include}}

const components = [
{{install}},
];

const install = function(Vue, opts = {}) {
  components.forEach(component => {
    Vue.component(component.name, component);
  });
};

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

export default {
  version: '{{version}}',
  install,
{{list}}
};
`;

const componentNames = Object.keys(Components);
console.log(componentNames);
const includeComponentTemplate = [];
const installTemplate = [];
const listTemplate = [];

componentNames.forEach(name => {
	const componentName = upperCamelcase('i-' + name);

	includeComponentTemplate.push(render(IMPORT_TEMPLATE, {
		name: componentName,
		package: name
	}));

	installTemplate.push(render(INSTALL_COMPONENT_TEMPLATE, {
		name: componentName,
		component: name
	}));

	listTemplate.push(`  ${componentName}`);
});

const template = render(MAIN_TEMPLATE, {
	include: includeComponentTemplate.join(endOfLine),
	install: installTemplate.join(',' + endOfLine),
	version: process.env.VERSION || require('../../package.json').version,
	list: listTemplate.join(',' + endOfLine)
});

fs.writeFileSync(OUTPUT_PATH, template);
console.log('[build entry] DONE:', OUTPUT_PATH);

